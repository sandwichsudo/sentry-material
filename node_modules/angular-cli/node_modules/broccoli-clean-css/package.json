{
  "_args": [
    [
      {
        "raw": "broccoli-clean-css@https://registry.npmjs.org/broccoli-clean-css/-/broccoli-clean-css-1.1.0.tgz",
        "scope": null,
        "escapedName": "broccoli-clean-css",
        "name": "broccoli-clean-css",
        "rawSpec": "https://registry.npmjs.org/broccoli-clean-css/-/broccoli-clean-css-1.1.0.tgz",
        "spec": "https://registry.npmjs.org/broccoli-clean-css/-/broccoli-clean-css-1.1.0.tgz",
        "type": "remote"
      },
      "/Users/amesg/repos/sentry-material/node_modules/angular-cli"
    ]
  ],
  "_from": "broccoli-clean-css@>=1.1.0 <2.0.0",
  "_id": "broccoli-clean-css@1.1.0",
  "_inCache": true,
  "_location": "/angular-cli/broccoli-clean-css",
  "_phantomChildren": {},
  "_requested": {
    "raw": "broccoli-clean-css@https://registry.npmjs.org/broccoli-clean-css/-/broccoli-clean-css-1.1.0.tgz",
    "scope": null,
    "escapedName": "broccoli-clean-css",
    "name": "broccoli-clean-css",
    "rawSpec": "https://registry.npmjs.org/broccoli-clean-css/-/broccoli-clean-css-1.1.0.tgz",
    "spec": "https://registry.npmjs.org/broccoli-clean-css/-/broccoli-clean-css-1.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/angular-cli",
    "/angular-cli/ember-cli-preprocess-registry"
  ],
  "_resolved": "https://registry.npmjs.org/broccoli-clean-css/-/broccoli-clean-css-1.1.0.tgz",
  "_shasum": "9db143d9af7e0ae79c26e3ac5a9bb2d720ea19fa",
  "_shrinkwrap": null,
  "_spec": "broccoli-clean-css@https://registry.npmjs.org/broccoli-clean-css/-/broccoli-clean-css-1.1.0.tgz",
  "_where": "/Users/amesg/repos/sentry-material/node_modules/angular-cli",
  "author": {
    "name": "Shinnosuke Watanabe",
    "url": "https://github.com/shinnn"
  },
  "bugs": {
    "url": "https://github.com/shinnn/broccoli-clean-css/issues"
  },
  "dependencies": {
    "broccoli-persistent-filter": "^1.1.6",
    "clean-css-promise": "^0.1.0",
    "inline-source-map-comment": "^1.0.5",
    "json-stable-stringify": "^1.0.0"
  },
  "description": "CSS minifier for Broccoli, using clean-css",
  "devDependencies": {
    "@shinnn/eslint-config-node-legacy": "^1.0.1",
    "broccoli": "^0.16.9",
    "broccoli-funnel": "^1.0.1",
    "eslint": "^1.10.3",
    "istanbul": "^0.4.1",
    "rimraf": "^2.4.4",
    "tape": "^4.2.2"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/shinnn/broccoli-clean-css#readme",
  "keywords": [
    "broccoli-plugin",
    "css",
    "cleancss",
    "clean-css",
    "minifier",
    "minification",
    "compress",
    "compressor",
    "postprocess",
    "optimization",
    "optimize",
    "optimizer",
    "whitespace"
  ],
  "license": "MIT",
  "name": "broccoli-clean-css",
  "optionalDependencies": {},
  "readme": "# broccoli-clean-css\n\n[![NPM version](https://img.shields.io/npm/v/broccoli-clean-css.svg)](https://www.npmjs.com/package/broccoli-clean-css)\n[![Build Status](https://travis-ci.org/shinnn/broccoli-clean-css.svg?branch=master)](https://travis-ci.org/shinnn/broccoli-clean-css)\n[![Build status](https://ci.appveyor.com/api/projects/status/hxys0gltb6qpj0gm?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/broccoli-clean-css)\n[![Coverage Status](https://img.shields.io/coveralls/shinnn/broccoli-clean-css.svg)](https://coveralls.io/r/shinnn/broccoli-clean-css)\n[![Dependency Status](https://david-dm.org/shinnn/broccoli-clean-css.svg)](https://david-dm.org/shinnn/broccoli-clean-css)\n[![devDependency Status](https://david-dm.org/shinnn/broccoli-clean-css/dev-status.svg)](https://david-dm.org/shinnn/broccoli-clean-css#info=devDependencies)\n\n[clean-css](https://github.com/jakubpawlowicz/clean-css) plugin for [Broccoli](https://github.com/broccolijs/broccoli)\n\n```css\na {\n  color: #FF0000;\n}\n\na {\n  border-radius: 4px 4px 4px 4px;\n}\n```\n\nâ†“\n\n```css\na{color:red;border-radius:4px}\n```\n\n## Installation\n\n[Use npm.](https://docs.npmjs.com/cli/install)\n\n```\nnpm install --save-dev broccoli-clean-css\n```\n\n## API\n\n```javascript\nconst cleanCSS = require('broccoli-clean-css');\n```\n\n### cleanCSS(*tree* [, *options*])\n\n*tree*: `String` or `Object` (broccoli tree)  \n*options*: `Object` (directly passed to [clean-css options](https://github.com/jakubpawlowicz/clean-css#how-to-use-clean-css-api))  \nReturn: `Function`\n\nNote that `relativeTo` option is relative to the source tree by default.\n\n```javascript\n//Brocfile.js\nconst cleanCSS = require('broccoli-clean-css');\n\nmodule.exports = cleanCSS('styles');\n```\n\n## License\n\nCopyright (c) 2014 - 2015 [Shinnosuke Watanabe](https://github.com/shinnn)\n\nLicensed under [the MIT License](./LICENSE).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shinnn/broccoli-clean-css.git"
  },
  "scripts": {
    "coverage": "node --strong_mode --harmony_destructuring --harmony_rest_parameters node_modules/.bin/istanbul cover --no-default-excludes -x=node_modules/** test/test.js",
    "coveralls": "${npm_package_scripts_coverage} && istanbul-coveralls",
    "pretest": "eslint --fix --config @shinnn/node-legacy --rule 'no-underscore-dangle: 0' index.js test/test.js",
    "test": "node --strong_mode --harmony_destructuring --harmony_rest_parameters --throw-deprecation --track-heap-objects test/test.js"
  },
  "version": "1.1.0"
}
