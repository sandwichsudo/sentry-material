{
  "_args": [
    [
      {
        "raw": "walk-sync@https://registry.npmjs.org/walk-sync/-/walk-sync-0.2.6.tgz",
        "scope": null,
        "escapedName": "walk-sync",
        "name": "walk-sync",
        "rawSpec": "https://registry.npmjs.org/walk-sync/-/walk-sync-0.2.6.tgz",
        "spec": "https://registry.npmjs.org/walk-sync/-/walk-sync-0.2.6.tgz",
        "type": "remote"
      },
      "/Users/amesg/repos/sentry-material/node_modules/angular-cli"
    ]
  ],
  "_from": "walk-sync@>=0.2.5 <0.3.0",
  "_id": "walk-sync@0.2.6",
  "_inCache": true,
  "_location": "/angular-cli/walk-sync",
  "_phantomChildren": {},
  "_requested": {
    "raw": "walk-sync@https://registry.npmjs.org/walk-sync/-/walk-sync-0.2.6.tgz",
    "scope": null,
    "escapedName": "walk-sync",
    "name": "walk-sync",
    "rawSpec": "https://registry.npmjs.org/walk-sync/-/walk-sync-0.2.6.tgz",
    "spec": "https://registry.npmjs.org/walk-sync/-/walk-sync-0.2.6.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/angular-cli/broccoli-caching-writer",
    "/angular-cli/broccoli-funnel",
    "/angular-cli/broccoli-persistent-filter",
    "/angular-cli/ember-cli",
    "/angular-cli/tree-sync"
  ],
  "_resolved": "https://registry.npmjs.org/walk-sync/-/walk-sync-0.2.6.tgz",
  "_shasum": "1d6b90e31abfc85153dd88956f8a727b9c308a6a",
  "_shrinkwrap": null,
  "_spec": "walk-sync@https://registry.npmjs.org/walk-sync/-/walk-sync-0.2.6.tgz",
  "_where": "/Users/amesg/repos/sentry-material/node_modules/angular-cli",
  "author": {
    "name": "Jo Liss",
    "email": "joliss42@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/joliss/node-walk-sync/issues"
  },
  "dependencies": {
    "matcher-collection": "^1.0.0"
  },
  "description": "Get an array of recursive directory contents",
  "devDependencies": {
    "jshint-tap-simple": "^1.0.2",
    "rimraf": "^2.4.3",
    "tap": "^1.0.0"
  },
  "homepage": "https://github.com/joliss/node-walk-sync#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "walk-sync",
  "optionalDependencies": {},
  "readme": "# node-walk-sync\n\n[![Build Status](https://travis-ci.org/joliss/node-walk-sync.png?branch=master)](https://travis-ci.org/joliss/node-walk-sync)\n[![Build status](https://ci.appveyor.com/api/projects/status/sqe785gqb2qfmxbx/branch/master?svg=true)](https://ci.appveyor.com/project/joliss/node-walk-sync/branch/master)\n\nReturn an array containing all recursive files and directories under a given\ndirectory, similar to Unix `find`. Follows symlinks. Bare-bones, but\nvery fast.\n\nSimilar to [`wrench.readdirSyncRecursive`](https://github.com/ryanmcgrath/wrench-js#synchronous-operations),\nbut adds trailing slashes to directories.\n\nNot to be confused with [node-walk](https://github.com/coolaj86/node-walk),\nwhich has both an asynchronous and a synchronous API.\n\n## Installation\n\n```bash\nnpm install --save walk-sync\n```\n\n## Usage\n\n```js\nvar walkSync = require('walk-sync');\nvar paths = walkSync('project')\n```\n\nGiven `project/one.txt` and `project/subdir/two.txt`, `paths` will be the following\narray:\n\n```js\n['one.txt', 'subdir/', 'subdir/two.txt']\n```\n\nDirectories come before their contents, and have a trailing forward-slash (on\nall platforms).\n\nSymlinks are followed.\n\n### Entries\n\nSometimes, it is important to get additional information from a walk of a\ndirectory; for instance if the downstream consumer needs to stat the files we\ncan leverage the stats from the walk.\n\nTo accommodate, `walkSync.entries(path [, options])` is also provided, instead\nof returning a list of files and/or directories it returns an array of objects\nwhich correspond to a given file or directory, except with more data.\n\n```\nentry.relativePath\nentry.mode  // => fs.statSync(fullPath).mode\nentry.size  // => fs.statSync(fullPath).size\nentry.mtime // => fs.statSync(fullPath).mtime.getTime()\n\nentry.isDirectory() // => true if directory\n```\n\n### Options\n\n* `globs`: An array of globs. Only files and directories that match at least\n  one of the provided globs will be returned.\n\n    ```js\n    var paths = walkSync('project', { globs: ['subdir/**/*.txt'] });\n    // => ['subdir/two.txt']\n    ```\n\n    As an alternative to string globs, you can pass an array of precompiled\n    [`minimatch.Minimatch`](https://github.com/isaacs/minimatch#minimatch-class)\n    instances. This is faster and allows to specify your own globbing options.\n\n* `directories` (default: true): Pass `false` to only return files, not\n  directories:\n\n    ```js\n    var paths = walkSync('project', { directories: false })\n    // => ['one.txt', 'subdir/two.txt']\n    ```\n\n## Background\n\n`walkSync(baseDir)` is a faster substitute for\n\n```js\nglob.sync('**', {\n  cwd: baseDir,\n  dot: true,\n  mark: true,\n  strict: true\n})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/joliss/node-walk-sync.git"
  },
  "scripts": {
    "test": "tap --timeout 2 ./test/*.js",
    "test:debug": "tap --debug-brk --timeout 9999 ./test/*.js"
  },
  "version": "0.2.6"
}
